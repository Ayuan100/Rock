{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/lib/Rock.ts","src/lib/map.ts","src/lib/renderer.ts","src/lib/scanner.ts","src/lib/view-model.ts","src/lib/watcher.ts","src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","scanner_1","watcher_1","renderer_1","Rock","this","prefix","viewModelPool","prototype","registerViewModel","alias","model","console","log","push","Array","init","scanner","Scanner","watcher","Watcher","mapList","scan","renderer","Renderer","observe","render","getViewModel","renderAll","Map","element","list","mappingList","Mapping","rock_attr","viewmodel","vm_attr","rock","map","mapping","innerHTML","style","left","top","color","onmousemove","onmousedown","map_1","map_2","allChildren","document","querySelectorAll","child","j","attributes","attr","nodeName","search","substring","indexOf","result","value","split","TestViewModel","text","x","y","bind","pool","callback","viewModel","this_1","defaultValue","Object","defineProperty","get","set","Rock_1","view_model_1","myRock","testViewModel","setInterval"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { Scanner } from \"./scanner\";\nimport { Watcher } from \"./watcher\";\nimport { Renderer } from \"./renderer\";\nimport { ViewModel } from \"./view-model\";\nimport { Map } from \"./map\"\n\n// Rock directive class\nexport class Rock {\n\t\n\tprefix:string = 'rock-'; //默认为rock-\n\n\tprivate viewModelPool :object = {};\n\tprivate mapList :Array<Map>;\n\t// private rockElements:Array<HTMLElement>;\n\n\n\tprivate scanner :Scanner;\n\tprivate watcher :Watcher;\n\tprivate renderer : Renderer;\n\n\t\n\n\tconstructor() {}\n\t\n\t// 把注册的viewmodel加入pool\n\tpublic registerViewModel( alias:string, model: object){\n\t\tconsole.log('register view model: ', alias);\n\t\tif(this.viewModelPool[alias]) this.viewModelPool[alias].push(model);\n\t\telse this.viewModelPool[alias] = new Array(model);\n\t\tconsole.log('Current viewModelPool:',this.viewModelPool);\n\t}\n\n\t// 初始化，可指定prefix\n\tpublic init(prefix ?: string){\n\n\t\tconsole.log('init Rock---------------');\n\n\t\tif(prefix) this.prefix = prefix + '-';\n\n\t\tthis.scanner = new Scanner(this);\t\n\n\t\tthis.watcher = new Watcher(this, this.viewModelPool);\n\t\t\n\t\tthis.mapList = this.scanner.scan();\n\t\tconsole.log('maplist:', this.mapList);\n\t\t\n\t\tthis.renderer = new Renderer(this, this.mapList);\n\n\t\tthis.watcher.observe(this.render);\n\t\tthis.render();\n\n\t\tconsole.log('finish init Rock------------');\n\t\t// this.watcher.observe(this.rockElements);\n\t}\n\t\n\tpublic getViewModel(alias :string){\n\t\treturn this.viewModelPool[alias][0];\n\t}\n\tpublic render(){\n\t\tthis.renderer.renderAll();\n\t}\n\n}\n\n\n","// 每个element对应的mappinglist\nexport class Map{\n\telement :HTMLElement;\n\tmappingList :Array<Mapping>;\n\tconstructor(element:HTMLElement, list:Array<Mapping>){\n\t\tthis.element = element;\n\t\tthis.mappingList = [];\n\t\tif(list) this.mappingList = list;\n\t}\n}\n// 每个attribute对应的viewmodel\nexport class Mapping{\n\tviewmodel :Object;\n\trock_attr :string;\n\tvm_attr : string;\n\tconstructor(rock_attr:string, viewmodel:Object, vm_attr:string){\n\t\tthis.viewmodel = viewmodel;\n\t\tthis.rock_attr = rock_attr;\n\t\tthis.vm_attr = vm_attr;\n\t}\n}","import { Map } from \"./map\"\nexport class Renderer {\n\tprivate rock :object;\n\tprivate mapList : Array<Map>;\n\tconstructor(rock :object, mapList :Array<Map>){\n\t\tthis.rock = rock;\n\t\tthis.mapList = mapList;\n\t\tconsole.log('new renderer');\n\t}\n\tpublic renderAll(){\n\t\tconsole.log('render all');\n\t\tif(this.mapList){\n\t\t\tfor( let i = 0; i < this.mapList.length; i++){\n\t\t\t\tthis.render(this.mapList[i]);\n\t\t\t}\n\t\t}\n\t}\n\t// 给HTML element设置相应的attr和event\n\tpublic render(map :Map){\n\t\t// console.log('render');\n\t\tlet list = map.mappingList;\n\t\tlet element = map.element;\n\t\tfor(let i = 0; i < list.length; i++){\n\t\t\tlet mapping = list[i];\n\t\t\tlet viewmodel = mapping.viewmodel;\n\t\t\tconsole.log('render- ',mapping.rock_attr, 'in ', mapping);\n\t\t\tswitch(mapping.rock_attr){\n\t\t\t\tcase 'text':\n\t\t\t\t\telement.innerHTML = viewmodel[mapping.vm_attr];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'x':\n\t\t\t\t\telement.style.left = viewmodel[mapping.vm_attr] + 'px';\n\t\t\t\t\t// console.log(element.style['left']);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'y':\n\t\t\t\t\telement.style.top = viewmodel[mapping.vm_attr] + 'px';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'color':\n\t\t\t\t\telement.style.color = viewmodel[mapping.vm_attr];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'onmousemove':\n\t\t\t\t\telement.onmousemove = viewmodel[mapping.vm_attr];\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'onmousedown':\n\t\t\t\t\telement.onmousedown = viewmodel[mapping.vm_attr];\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(mapping.rock_attr, ' attr to add');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n}","import { Map } from \"./map\";\nimport { Mapping } from \"./map\";\nimport { Rock } from \"./Rock\";\n\n\nexport class Scanner {\n\tprivate prefix = \"rock-\";\n\tprivate rock :Rock;\n\n\tconstructor(rock :Rock) {\n\t\tthis.rock = rock;\n        this.prefix = rock.prefix;\n        console.log('new scanner');\n\t}\n\n\t// 扫描所有元素，放入map\n\tpublic scan() :Array<Map>{\n\t\tconsole.log('scan--------');\n        let mapList : Array<Map> =[];\n        // 扫描所有元素\n\t\tlet allChildren = document.querySelectorAll(\"*\");\n\t\tfor (let i = 0; i < allChildren.length; i++) {\n            let child: HTMLElement = allChildren[i] as HTMLElement;\n            let mappingList: Array<Mapping> = [];\n            // 扫描所有attribute找到mapping\n            for (let j = 0; j < child.attributes.length; j++) {\n                let attr = child.attributes[j];\n                // console.log('attr:',attr);\n                // 把带prefix的属性加到mapping\n                if (attr.nodeName.search(this.prefix) > -1) {\n                    let rock_attr = attr.nodeName.substring(attr.nodeName.indexOf('-')+1);\n                    // 解析vm.xxx\n                    let result = attr.value.split(/\\./);\n\n                    if(result.length > 1){\n                        let alias :string = result[0];\n                        let vm_attr = result[1];\n                        // 匹配已注册的view model\n                        let viewmodel = this.rock.getViewModel(alias);\n                        if(viewmodel){\n                            // 加入mapping\n                            mappingList.push(new Mapping(rock_attr, viewmodel, vm_attr));\n                            // console.log('add alias:',alias,' attr:',rock_attr);\n                        }\n                    } \n                }\n            }\n            // 加入map\n            if(mappingList.length > 0) mapList.push(new Map(child, mappingList));\n        }\n        // console.log(mapList);\n        return mapList;\n\t}\n}","export interface ViewModel {\n\tx?: number;\n\ty?: number;\n\ttext?: string;\n\tcolor?: string;\n\tonmousemove?(e: MouseEvent);\n\tonmousedown?(e: MouseEvent);\n}\n\nexport class TestViewModel implements ViewModel{\n\tx = 0;\n\ty = 0;\n\ttext = null;\n\tcolor = 'red';\n\tconstructor(text){\n\t\tthis.text = text;\n\t}\n\tonmousedown = (function(e :MouseEvent){\n\t\t// console.log(e);\n\t\tif(this.color == 'red') this.color = 'blue';\n\t\telse this.color = 'red';\n\t\tconsole.log('onmousedown');\n\t}).bind(this);\n}","export class Watcher {\n\tprivate rock :Object;\n\tprivate pool :Object;\n\tconstructor(rock:Object, pool:Object){\n\t\tthis.rock = rock;\n\t\tthis.pool = pool;\n\t\tconsole.log('new watcher:',this);\n\t}\n\t// 给pool力的所有attr添加set和get函数\n\tpublic observe(callback:Function) {\n\t\tconsole.log('going to observe pool:', this.pool);\n\t\tlet rock = this.rock;\n\t\t// let test:Object ={a:1,b:1};\n\t\tfor(let alias in this.pool){\n\t\t\tlet viewModel = this.pool[alias][0];\n\t\t\tconsole.log('----observe viewmodel:', viewModel, callback);\n\t\t\tfor(let attr in viewModel){\n\t\t\t\tlet defaultValue = viewModel[attr];\n\t\t\t\tObject.defineProperty(viewModel, attr, {\n\t                get: function () {\n\t                    return defaultValue;\n\t                },\n\t                set: function (value) {\n\t                \tdefaultValue = value;\n\t                    console.log(\"do something after set a new value on \",alias,'-',attr);\n\t                    callback.call(rock);\n\t                }\n\t            });\n\t\t\t}\n            \n\n\t\t}\n\t}\n}","import { Rock } from \"./lib/Rock\";\nimport { ViewModel, TestViewModel } from \"./lib/view-model\"\n\n\nlet myRock = new Rock();\nlet testViewModel = new TestViewModel('I am Moving Every Second, click me!');\n\nmyRock.registerViewModel('vm', testViewModel);\nmyRock.init();\n\n\ntestViewModel.x = 100;\nsetInterval(\n\t(function(){\n\t\tif(this.x < 50){\n\t\t\tif(this.y < 50) this.x += 50;\n\t\t\telse this.y -=50;\n\t\t} \n\t\telse{\n\t\t\tif(this.y < 50) this.y += 50;\n\t\t\telse this.x -= 50;\n\t\t} \n\t}).bind(testViewModel), \n\t1000);\n"]}